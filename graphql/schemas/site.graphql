    type Ost {
        id: ID!
        title: String!
        subTitle: String
        releaseDate: String!
        label: String
        vgmdb: String
        description: String
        stores: [Store]!
        discs: [Disc]!
        downloads: [Download]!
        artists: [Artist]!
        classes: [Class]!
        categories: [Category]!
        platforms: [Platform]!
        games: [Game]!
        animations: [Animation]!
        related: [Ost]!
        updatedAt: Float!
        createdAt: Float!
        createdBy: User
        status: String!
    }

    type Disc {
        id: ID!
        number: Int
        body: String
        ost: Ost
    }

    input DiscInput {
        number: Int
        body: String
    }

    input DownloadInput {
        title: String
        small: Boolean
        links: [LinkInput]
    }

    input LinkInput {
        provider: String
        custom: String
        url: String
        directUrl: String
    }

    type Download {
        id: ID!
        title: String
        small: Boolean
        links: [Link]
    }

    type Store {
        id: ID!
        provider: String
        url: String
    }

    type Link {
        id: ID!
        provider: String
        custom: String
        url: String
        directUrl: String
    }

    type Artist {
        name: String!
        slug: String!
        osts: [Ost]
    }

    type Class {
        name: String!
        osts: [Ost]!
    }

    type Game {
        slug: String!
        name: String
        releaseDate: String
        publishers: [Publisher]
        platforms: [Platform]
        osts: [Ost]
        series: [Series]
    }

    type Animation {
        id: ID!
        title: String
        subTitle: String
        releaseDate: String
        studios: [Studio]!
        osts: [Ost]!
    }

    type Studio {
        slug: String!
        name: String
        animations: [Animation]!
    }

    type Platform {
        id: ID!
        name: String
        type: String!
        osts: [Ost]
        games: [Game]!
    }

    type Publisher {
        id:ID!
        name: String
        games: [Game]
    }

    type Series {
        slug: String!
        name: String
        games: [Game]
    }

    type Category {
        name: String!
        osts: [Ost]!
    }
    
    type SearchOstResult {
        rows: [Ost]
        count: Int
    }

    type SearchAnimResult {
        rows: [Animation]
        count: Int
    }

    type SearchStudioResult {
        rows: [Studio]
        count: Int
    }

    type SearchGameResult {
        rows: [Game]
        count: Int
    }

    type SearchSeriesResult {
        rows: [Series]
        count: Int
    }

    input ArtistInput {
        name: String!
        slug: String!
    }

    input StoreInput {
        provider: String!
        url: String!
    }

    type Query {
        osts: [Ost!]!
        ostCount: Float!
        categories: [Category]!
        classes: [Class]!
        ost(id: ID): Ost!
        artists: [Artist!]!     
        platforms: [Platform!]!
        platform(id: ID): Platform!
        publishers: [Publisher]! 
        publisher(id: ID!): Publisher!  
        series: [Series]!  
        seriesOne(slug: String): Series!
        games: [Game!]!
        game(slug: String): Game!
        animations: [Animation]!
        animation(id: ID): Animation!
        studios: [Studio]!
        studio(slug: String!): Studio!

        searchOst(title: String, classes:[String], limit: Int, page: Int, order: [String], mode: String, status: [String!]): SearchOstResult
        searchOstByArtist(name: String!, classes:[String], limit: Int, page: Int, order: [String], mode: String, status: [String!]): SearchOstResult
        searchAnimation(title: String, limit: Int, page: Int, order:String, mode: String): SearchAnimResult
        searchStudio(name: String, limit: Int, page: Int, order:String, mode: String): SearchStudioResult
        searchGame(name: String, limit: Int, page: Int, order:String, mode: String): SearchGameResult
        searchSeries(name: String, limit: Int, page: Int, order:String, mode: String): SearchSeriesResult

        searchSeriesByName(name: String): [Series] 
        recentSeries(limit: Int!): [Series]
        searchPublishersByName(name: String): [Publisher] 
        recentPublishers(limit: Int!): [Publisher]
        searchPlatformsByName(name: String, type: String!): [Platform] 
        recentPlatforms(limit: Int!, type: String!): [Platform]
    }

    type Mutation {
        createArtist(name: String): Artist!

        createPlatform(name: String, type: String!): Platform!
        updatePlatform(key: ID!, name: String, type: String!): Platform!
        deletePlatform(key:ID!): Int!

        createPublisher(name: String): Publisher!
        updatePublisher(id:ID!, name: String): Publisher!
        deletePublisher(id:ID!): Int!

        createSeries(slug: String, name:String, cover:Upload): Series!
        updateSeries(slug: String, name:String, cover:Upload): Series!
        deleteSeries(slug:String!): Int!

        createGame(releaseDate:String, slug:String, name:String, publishers:[ID], series:[String], platforms:[ID], cover:Upload): Game!
        updateGame(releaseDate:String, slug:String, name:String, publishers:[ID], series:[String], platforms:[ID], cover:Upload): Game!
        deleteGame(slug:String!): Int!

        createStudio(slug:String, name:String): Studio!
        updateStudio(slug:String, name:String): Studio!
        deleteStudio(slug:String!): Int!

        createAnimation(title:String, subTitle:String, releaseDate:String, studios:[String], cover:Upload): Animation
        updateAnimation(id:ID!, title:String, subTitle:String, releaseDate:String, studios:[String], cover:Upload): Animation
        deleteAnimation(id:ID!): Int!

        createOst(
            title: String, 
            subTitle: String, 
            cover: Upload,
            releaseDate: String,
            label: String,
            vgmdb: String,
            description: String,
            stores: [StoreInput],
            downloads: [DownloadInput],
            artists: [String],
            classes: [String],
            categories: [String],
            platforms: [ID],
            games: [String],
            animations: [ID],
            discs: [DiscInput],
            related: [ID],
            status: String!
        ): Ost!
        updateOst(id: ID!, data: JSONObject!): Ost!
        deleteOst(id: ID!): Int
    }
