    type User {
        username: String!
        roles: [Role]! 
        permissions: [String]!  
        pages: [Page]!
        createdAt: Float!
    }

    type UserMe {
        email: String!
        username: String!
        roles: [Role]! 
        permissions: [String]!  
        pages: [Page]!
        createdAt: Float!
    }

    type Page {
        url: String!
        name: String!
        perms: [String!]!
    }

    type Role {
        name: String!
        permissions: [String]!
    }

    type Query {
        me: UserMe
        roles: [Role]!
        permissions: [String]!
        users(username: String): [User]!
        user(username: String!): User

        login(username: String!, password: String!): Int!
        logout: Int!
    }

    type Mutation {
        createUser(email: String!, username: String!, roles: [String]!): Boolean!
        updateUserRoles(username: String!, roles: [String]!): Boolean!
        deleteUser(username: String!): Int

        createForgorLink(key: String!): Boolean!
        updatePass(key: String!, pass:String!): Boolean!
        updateUser(username: String, password: String, email: String): Boolean!

        createRole(name: String!, permissions: [String]!): Role
        updateRole(key:String!, name: String!, permissions: [String]!): Role
        deleteRole(name: String!): String  
    }
